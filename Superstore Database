#this project utilizes the following superstore data

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#For this project I used SQL to query the superstore database to get information about items sold and their pricing

#Use a SELECT statment and order items by price
SELECT *
FROM superstore
ORDER BY price;

#Find the average amount spent for each category or department and sort by average spent
SELECT
category,
AVG(price) AS avg_spend
FROM superstore
GROUP BY category
ORDER BY avg_spend; 

#Find the price of the most expensive item
SELECT
MAX(price)
FROM superstore; 

#Show a static about the average rating of the products in the superstore 
SELECT
	AVG(average_rating)
FROM superstore
WHERE
	category = 'Kitchen Supplies'; 
    
#find the lowest rated item in the Kitchen Supplies category
SELECT
	item_name,
    price,
    average_rating
FROM superstore
WHERE
	category = 'Kitchen Supplies'
ORDER BY average_rating 
LIMIT 1;

#Find out how much of each item was in stock and sort to find items with the lowest quantity
SELECT
	item_name,
    stock_quantity
FROM superstore
ORDER BY stock_quantity

#Going into an appliances sale - find the item with the highest average rating to see what item to feature - the item must be over $50
SELECT
	item_name, 
	price,
	MAX(average_rating)
FROM superstore
WHERE category = 'Appliances' AND price >49.99;
